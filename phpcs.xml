<?xml version="1.0"?>
<ruleset name="Strapped theme standards">

    <!-- Set a description for this ruleset. -->
    <description>Set of code standards for Strapped theme</description>

    <!-- Show colors in console -->
    <arg value="-colors"/>

    <!-- Show sniff codes in all reports -->
    <arg value="s"/>

    <!-- Don't show warnings -->
    <arg value="n"/>

    <!-- Only check the PHP files -->
    <arg name="extensions" value="php"/>

    <!-- Scan these files -->
    <file>.</file>

    <!-- Ignore the vendor directory -->
    <exclude-pattern>*/vendor/*</exclude-pattern>
    <exclude-pattern>*/docker/*</exclude-pattern>
    <exclude-pattern>*/woocommerce/*</exclude-pattern>
    <exclude-pattern>*/src/*</exclude-pattern>
    <exclude-pattern>*/dist/*</exclude-pattern>
    <exclude-pattern>*/node_modules/*</exclude-pattern>

    <!-- Use the WordPress Ruleset -->
    <rule ref="WordPress">
        <exclude name="WordPress.Files.FileName.InvalidClassFileName"/>
        <exclude name="WordPress.PHP.YodaConditions.NotYoda"/>
        <exclude name="WordPress.WhiteSpace.ControlStructureSpacing.BlankLineAfterEnd"/>
        <exclude name="WordPress.WhiteSpace.DisallowInlineTabs.NonIndentTabsUsed"/>
        <exclude name="WordPress.Security.EscapeOutput.UnsafePrintingFunction"/>
        <exclude name="WordPress.Security.EscapeOutput.OutputNotEscaped"/>
        <exclude name="WordPress.Security.ValidatedSanitizedInput.InputNotSanitized"/>
        <exclude name="WordPress.WP.GlobalVariablesOverride.Prohibited"/>
        <exclude name="WordPress.WP.I18n.MissingTranslatorsComment"/>
        <exclude name="WordPress.WP.I18n.NonSingularStringLiteralText"/>
        <exclude name="WordPress.WP.EnqueuedResources.NonEnqueuedStylesheet"/>
        <exclude name="WordPress.WP.EnqueuedResources.NonEnqueuedScript"/>

        <exclude name="Generic.WhiteSpace.DisallowSpaceIndent.SpacesUsed"/>
        <exclude name="Generic.Commenting.DocComment.SpacingAfter"/>
        <exclude name="Generic.WhiteSpace.ScopeIndent.IncorrectExact"/>
        <exclude name="Generic.WhiteSpace.ScopeIndent.Incorrect"/>

        <exclude name="PEAR.Functions.FunctionCallSignature.SpaceAfterOpenBracket"/>
        <exclude name="PEAR.Functions.FunctionCallSignature.SpaceBeforeCloseBracket"/>       
    </rule>

    <!--
        Allow for theme specific exceptions to the file name rules based
        on the theme hierarchy.
    -->
    <rule ref="WordPress.Files.FileName">
        <properties>
            <property name="is_theme" value="true"/>
        </properties>
    </rule>

    <!-- A closing tag is not permitted at the end of a PHP file -->
    <rule ref="Zend.Files.ClosingTag"/>

    <!-- Use the PHPCompatibility Ruleset -->
    <config name="testVersion" value="5.2-99.0"/>
    <rule ref="PHPCompatibility">
        <!--
            Whitelist PHP native classes, interfaces, functions and constants which
            are back-filled by WP.

            Based on:
            * /wp-includes/compat.php
            * /wp-includes/random_compat/random.php
        -->
        <exclude name="PHPCompatibility.PHP.NewClasses.errorFound"/>
        <exclude name="PHPCompatibility.PHP.NewClasses.typeerrorFound"/>

        <exclude name="PHPCompatibility.PHP.NewConstants.json_pretty_printFound"/>
        <exclude name="PHPCompatibility.PHP.NewConstants.php_version_idFound"/>

        <exclude name="PHPCompatibility.PHP.NewFunctions.hash_equalsFound"/>
        <exclude name="PHPCompatibility.PHP.NewFunctions.json_last_error_msgFound"/>
        <exclude name="PHPCompatibility.PHP.NewFunctions.random_intFound"/>
        <exclude name="PHPCompatibility.PHP.NewFunctions.random_bytesFound"/>
        <exclude name="PHPCompatibility.PHP.NewFunctions.array_replace_recursiveFound"/>

        <exclude name="PHPCompatibility.PHP.NewInterfaces.jsonserializableFound"/>

    </rule>

</ruleset>

